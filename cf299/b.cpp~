#include <stdio.h>
#include <algorithm>
#include <iostream>
#include <utility>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <math.h>
#include <string>
#include <cassert>
#include <string.h>
#include <vector>
#include <set>
#include <list>
#include <sstream>
#include <time.h>
#include <cstdlib>
#include <ctype.h>

#define deb(x) cout << #x << " = " << x << endl;
#define print(Z,a,b) for (int __z = a; __z < b; __z ++) cout << Z[__z] << " ";
#define scan(Z,a,b) for (int __z = a; __z < b; __z ++) cin >> Z[__z];
#define bit(_z) (1ll << (_z))
#define rep(__z,__Z) for(int __z = 0; __z < __Z ; __z++ )
#define all(__z) __z.begin(),__z.end()

#define par pair<int, int>
#define p1 first
#define p2 second

#define eps = 1e-6

using namespace std;

const long long mod = 1000000007ll;

int n, m;
char p[2001000];
int lp;
int X[2001000];

long long P[2001000];
long long H1[2001000];
long long H2[2001000];

bool ak[2001000];

long long preprocess()
{
	P[0] = 1;
	for (int i = 1; i <= n; i ++)
	{
		P[i] = P[i-1] * 107;
	}
	
	H1[0] = p[0] - 'a';
	for (int i = 1; i < lp; i ++)
	{
		H1[i] = H1[i-1];
		H1[i] += (p[i] - 'a') * P[i];
	}
	
	H2[lp-1] = p[lp-1] - 'a';
	for (int i = lp-2; i >= 0; i --)
	{
		H2[i] = H2[i+1] * 107;
		H2[i] += p[i] - 'a';
	}
}

int ex = 0;
bool compare(int idx)
{
	if (ex * lp > 10000000)
		return false;
	int idx2 = 0;
	while (idx < lp)
		if (p[idx++] != p[idx2++])
			return false;
	return true;
}

int main()
{
	cin >> n >> m;
	cin >> p;
	lp = strlen(p);
	scan(X, 0, m);
	sort(X, X + m);
	
	preprocess();
	
	for (int i = 1; i < m; i ++)
	{
		if (X[i]-X[i-1] < lp and (H1[lp-(X[i]-X[i-1])-1] != H2[X[i]-X[i-1]] or !compare(X[i]-X[i-1])))
		{
			cout << 0 << endl;
			return 0;
		}
	}

	for (int i = 0; i < m; i ++)
		ak[X[i]-1] = true;
		
	long long ans = 1;
	for (int i = 0, j = 0; i < n; i ++)
	{
		if (ak[i] == true)
			j = lp;
		if (j>0)
			ak[i] = true;
		j--;
		if (!ak[i])
		{
			ans = ans * 26ll;
			ans %= mod;
		}
	}
	
	cout << ans << endl;
	
	return 0;
}


